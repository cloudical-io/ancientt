version: '0'
runner:
  name: kubernetes
  kubernetes:
    #kubeconfig: .kube/config
    image: 'quay.io/galexrt/container-toolbox:20210915-100515-297'
    namespace: ancientt
    timeouts:
      deleteTimeout: 20
      runningTimeout: 60
      succeedTimeout: 60
    hosts:
      ignoreSchedulingDisabled: true
      tolerations: []
    # If the Pods should be run with `hostNetwork: true` option
    hostNetwork: false
tests:
- name: iperf3-one-rand-to-one-rand
  type: iperf3
  transformations:
  - source: "bits_per_second"
    destination: "gigabits_per_second"
    action: "add"
    modifier: 100000000
    modifierAction: "division"
  outputs:
  - name: csv
    csv:
      filePath: /tmp
      namePattern: 'ancientt-{{ .TestStartTime }}-{{ .Data.Tester }}.csv'
      # If you want one CSV per server and client host test run, you can use the following:
      #namePattern: 'ancientt-{{ .TestStartTime }}-{{ .Data.Tester }}-{{ .Data.ServerHost }}_{{ .Data.ClientHost }}.csv'
  #- name: sqlite
  #  sqlite:
  #    filePath: /tmp
  #    namePattern: 'ancientt-{{ .TestStartTime }}-{{ .Data.Tester }}.sqlite3'
  #    tableNamePattern: 'ancientt{{ .TestStartTime }}{{ .Data.Tester }}'
  #- name: mysql
  #  mysql:
  #    dsn: "username:password@127.0.0.1/mydb"
  #    tableNamePattern: 'ancientt{{ .TestStartTime }}{{ .Data.Tester }}'
  #    autoCreateTables: true
  #- name: excelize
  #  excelize:
  #    filePath: /tmp
  #    namePattern: "ancientt-{{ .TestStartTime }}-{{ .Data.Tester }}.xlsx"
  #    saveAfterRows: 200 outputs mysql: added AutoCreateTables option
  runOptions:
    continueOnError: true
    rounds: 1
    # Wait 10 seconds between each round
    interval: 10s
    mode: "sequential"
    parallelcount: 1
  # This hosts section would cause iperf3 to be run from all hosts to the hosts selected in the `destinations` section
  # Each entry will be merged into one list
  hosts:
    clients:
    - name: all-host
      all: true
    #  hostSelector:
    #    nope: foo
    #- name: all-hosts
    #  all: true
    #  hosts:
    #    - servers-0
    #    - servers-4
    servers:
    - name: one-randomly-selected-server
      random: true
      count: 2
    #  hostSelector:
    #    nope: foo
    #- name: different-hosts-1
    #  random: true
    #  count: 2 # When more than one hosts is wanted,
    #  hostSelector: # For Labels in K8s and Variables of hosts in Ansible
    #    network-tests-run-here: "true"
    #  antiAffinity:
    #    - openstack-region # This makes sure hosts with each different "openstack-region" are picked
    #- name: specific-host-list
    #  hosts:
    #    - serverabc123
    #    - serverxyz789
  iperf3:
    udp: false
    duration: 10
    interval: 1
    additionalFlags:
      clients: []
      server: []
